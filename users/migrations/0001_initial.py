# Generated by Django 5.1.9 on 2025-06-09 08:44

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(db_column='firstName', max_length=45)),
                ('lastName', models.CharField(db_column='lastName', max_length=150)),
                ('email', models.EmailField(max_length=45, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField(db_column='is_deleted', default=False)),
                ('is_suspended', models.BooleanField(db_column='is_suspended', default=False)),
                ('is_pending', models.BooleanField(db_column='is_pending', default=True)),
                ('isVerified', models.BooleanField(db_column='isVerified', default=False)),
                ('verificationCode', models.CharField(blank=True, db_column='verificationCode', max_length=45, null=True)),
                ('role', models.CharField(blank=True, choices=[('employer', 'Employer'), ('jobseeker', 'JobSeeker'), ('superAdmin', 'SuperAdmin'), ('admin', 'Admin')], db_column='role', max_length=20, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('deleted_at', models.DateTimeField(blank=True, db_column='deleted_at', null=True)),
                ('deletion_reason', models.TextField(blank=True, db_column='deletion_reason', null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
